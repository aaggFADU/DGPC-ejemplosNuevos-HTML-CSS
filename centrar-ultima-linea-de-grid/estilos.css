*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  color-scheme: dark;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
}

header.grid-container {
  /* para demo */
  margin-block: 1rem 0;
  text-align: center;
}

.item {
  /*   grid-column-end: span 2; */
  height: 10rem;
  background: hsl(340 80% 50%);
  border: 5px solid hsl(340 80% 70%);
  border-radius: 1rem;
}

.grid-container {
  /* para demo */
  width: min(100% - 3rem, 65rem);
  margin-inline: auto;
  margin-block: 6rem;

  container-type: inline-size;
}

/*
-----
Aqui las reglas para centralizar la última línea de grid
-----
*/

.grid {
  display: grid;
  gap: 1rem;
  /*   grid-template-columns: repeat(calc(var(--column-count, 3) * 2), 1fr); */
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));

  @container (width >= calc(100px * 2 + 1rem)) {
    .item {
      grid-column: span 2;
    }
  }

  @container ( calc(100px * 4 + 3rem) < width < calc(100px * 6 + 5rem) ) {
    .item:last-child:nth-child(odd) {
      grid-column: 2 / span 2;
    }
  }

  @container ( calc(100px * 6 + 5rem) < width < calc(100px * 8 + 7rem) ) {
    .item:nth-child(3n + 4):last-child {
      grid-column: 3 / 5;
    }

    &:has(:nth-child(3n + 5):last-child) > :nth-last-child(2) {
      grid-column: 2 / 4;
    }
  }

  @container ( calc(100px * 8 + 7rem) < width < calc(100px * 10 + 9rem) ) {

    .item:nth-child(4n + 5):last-child {
      grid-column: 4 / 6;
    }

    &:has(:nth-child(4n + 6):last-child) > :nth-last-child(2) {
      grid-column: 3 / 5;
    }

    &:has(:nth-child(4n + 7):last-child) > :nth-last-child(3) {
      grid-column: 2 / 4;
    }
  }
}
