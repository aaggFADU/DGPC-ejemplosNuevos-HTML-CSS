@property --_x {
  syntax: "<length-percentage>";
  inherits: true;
  initial-value: 0px;
}

@property --w {
  syntax: "<length-percentage>";
  inherits: true;
  initial-value: 100%;
}

@property --r {
  syntax: "<length-percentage>";
  inherits: true;
  initial-value: 2em;
}

.card {
  --w: 100%; 
  --r: 2em;
  --interior: 2em;
  --interior-x: 5em;
  --x: 2em;

  width: var(--w);
  aspect-ratio: 3 / 2;
  background-color: white;
  border-radius: var(--r);
  
  --_m:/ calc(2 * var(--r)) calc(2 * var(--r)) radial-gradient(#0005 69%,#0000 72%);

  --_g:conic-gradient(
    from -90deg
    at var(--r) var(--r),
    #0000 25%,
    #0005 0
  );

  --_d:(var(--interior) + var(--r));
  
  mask:
    var(--_d) 0 var(--_m),
    0 var(--_d) var(--_m),
    radial-gradient(
      var(--interior) at 0 0,
      #0000 99%,
      #0005 calc(100% + 1px)
    ) var(--r) var(--r),
    var(--_g) var(--_d) 0,
    var(--_g) 0 var(--_d);

  mask-repeat: no-repeat;
}


@layer reset {

  /* hace que dimensionar sea más simple */
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  /* 
  se propone tb:

  html { box-sizing: border-box; }
  *, *:before, *:after { box-sizing: inherit;}

  Esto dará el mismo resultado y facilitará el cambio de la propiedad `box-sizing` en plugins u otros componentes que utilicen un comportamiento diferente.
  */
  }

  /* Elimina espaciado predeterminado */
  /* Obliga que estilo de la tipografía se defina a través de estilos, en lugar de elementos */
  * {
    margin: 0; /* tal vez */
    padding: 0; /* tal vez */
    font: inherit; /* tal vez */
  }

  :root {
    /* Estilos de agente de usuario para el modo claro / oscuro */
    color-scheme: dark light;

    /* Mejora la puntuación en navegadores compatibles */
    hanging-punctuation: first last;
    
    /* Evitar el aumento del tamaño de fuente en celulares IOS */
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;

    /* interlineado ampliado (aquí en lugar de en "body" para mayor control en diferentes situaciones) */
    line-height: 1.6;
    
    /* Permite animar, por ejemplo, a "height: auto;" o desde "display: none;" o  */
    @supports (interpolate-size: allow-keywords) {
      interpolate-size: allow-keywords;
    }

  }

  /* altura mínima: ventana del navegador */
  body {
    min-block-size: 100svh;
  }

  /* imágenes/videos adaptables */
  img,
  picture,
  svg,
  video {
    display: block;
    max-inline-size: 100%;
  }

  /* Encabezados mejorados en navegadores compatibles */
  h1,
  h2,
  h3,
  h4,
  button,
  input,
  label,
  optgroup,
  select,
  textarea {
    text-wrap: balance;
    line-height: 1.1;
  }

  /* Mejora la legibilidad con max-width en párrafos y listas */
  /* Evita huérfanos en navegadores compatibles */
  p,
  li,
  figcaption {
    max-inline-size: var(--p-ancho-maximo, 75ch);
    text-wrap: pretty;
  }

  /* transforma en "contenedores" cuyas medidas
  puedes ser evaluadas para decidir
  disposición de elementos contenidos
  usando "@container" */
  header,
  footer,
  main,
  section,
  article {
    container-type: inline-size;
  }

  /*  botones e inputs de formularios heredan tipografía */
  input,
  button,
  textarea,
  select {
    font-family: inherit;
    font-size: inherit;
  }


  /* Relleno superior para que el destino de un link
  no quede oculto por un header sticky  */
  :root { scroll-padding-top: var(--altura-header, 4rem); }

  /* Scroll suave, si NO se prefiere eliminar animaciones */
  @media (prefers-reduced-motion: no-preference) {
    :root { scroll-behavior: smooth; }
  }



  /* 
  -----
  -----
  -----
  -----
  */



  body {
    --espacio: clamp(1.25rem, 0.875rem + 1.875vw, 2rem);

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100% - 4rem, 20rem), 1fr));
    place-items: center;
    place-content: center;
    gap: var(--espacio);
    font-family: system-ui, sans-serif;
    padding: var(--espacio);
  }

}